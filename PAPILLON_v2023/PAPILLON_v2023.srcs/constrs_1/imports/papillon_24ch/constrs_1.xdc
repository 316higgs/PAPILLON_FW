
####################################################################################
# Generated by Vivado 2016.2 built on 'Thu Jun  2 16:32:40 MDT 2016' by 'xbuild'
####################################################################################


####################################################################################
# Constraints from file : 'sys_mmcm_board.xdc'
####################################################################################

#--------------------Physical Constraints-----------------



####################################################################################
# Constraints from file : 'sys_mmcm.xdc'
####################################################################################


# file: sys_mmcm.xdc
#
# (c) Copyright 2008 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#

# Input clock periods. These duplicate the values entered for the
# input clocks. You can use these to time your system. If required
# commented constraints can be used in the top level xdc
#----------------------------------------------------------------
# Connect to input port when clock capable pin is selected for input
#current_instance instance_name/inst
#create_clock -period 20.000 [get_ports -scoped_to_current_instance clk_in1]




####################################################################################
# Constraints from file : 'constrs_1.xdc'
####################################################################################


####################################################################################
# Generated by Vivado 2016.2 built on 'Thu Jun  2 16:32:40 MDT 2016' by 'xbuild'
####################################################################################


####################################################################################
# Constraints from file : 'sys_mmcm_board.xdc'
####################################################################################

#--------------------Physical Constraints-----------------



####################################################################################
# Constraints from file : 'sys_mmcm.xdc'
####################################################################################


# file: sys_mmcm.xdc
#
# (c) Copyright 2008 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#

# Input clock periods. These duplicate the values entered for the
# input clocks. You can use these to time your system. If required
# commented constraints can be used in the top level xdc
#----------------------------------------------------------------
# Connect to input port when clock capable pin is selected for input
#create_clock -period 20.000 [get_ports -scoped_to_current_instance clk_in1]




####################################################################################
# Constraints from file : 'digital_31_0.xdc'
####################################################################################


#current_instance -quiet
set_property PACKAGE_PIN Y12 [get_ports {ADC_SCLK[1]}]
set_property IOSTANDARD LVCMOS25 [get_ports {ADC_CSB[1]}]
set_property IOSTANDARD LVCMOS25 [get_ports {ADC_SCLK[1]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_CLK_P[1]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_N[0]}]
set_property IOSTANDARD LVCMOS25 [get_ports {ADC_SDIO[1]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_N[2]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_P[1]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_N[1]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_DCO_P[1]}]
set_property PACKAGE_PIN W11 [get_ports {ADC_FCO_P[1]}]
set_property PACKAGE_PIN AB11 [get_ports {ADC_D_P[5]}]
set_property PACKAGE_PIN Y13 [get_ports {ADC_D_P[3]}]
set_property PACKAGE_PIN AA10 [get_ports {ADC_D_P[6]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_FCO_P[1]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_P[5]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_N[5]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_P[3]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_N[3]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_P[6]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_N[6]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_P[4]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_N[4]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_P[7]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_N[7]}]

set_property IOSTANDARD LVDS_25 [get_ports {ADC_CLK_P[3]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_CLK_N[3]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_CLK_P[2]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_CLK_N[2]}]
set_property IOSTANDARD LVDS_25 [get_ports NIM_OUT_P]
set_property IOSTANDARD LVDS_25 [get_ports NIM_OUT_N]
set_property IOSTANDARD LVCMOS25 [get_ports {ADC_CSB[3]}]
set_property IOSTANDARD LVCMOS25 [get_ports {ADC_CSB[2]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_N[23]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_P[23]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_N[22]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_P[22]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_N[21]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_P[21]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_N[20]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_P[20]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_N[19]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_P[19]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_N[18]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_P[18]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_N[17]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_P[17]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_N[16]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_P[16]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_N[15]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_P[15]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_N[14]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_P[14]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_N[13]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_P[13]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_N[12]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_P[12]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_N[11]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_P[11]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_N[10]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_P[10]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_N[9]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_P[9]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_N[8]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_D_P[8]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_DCO_P[3]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_DCO_N[3]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_DCO_P[2]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_DCO_N[2]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_FCO_P[3]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_FCO_N[3]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_FCO_P[2]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_FCO_N[2]}]
set_property IOSTANDARD LVCMOS25 [get_ports {ADC_SCLK[3]}]
set_property IOSTANDARD LVCMOS25 [get_ports {ADC_SCLK[2]}]
set_property IOSTANDARD LVCMOS25 [get_ports {ADC_SDIO[3]}]
set_property IOSTANDARD LVCMOS25 [get_ports {ADC_SDIO[2]}]
set_property IOSTANDARD LVCMOS33 [get_ports {DIP_SW[3]}]
set_property IOSTANDARD LVCMOS33 [get_ports {DIP_SW[2]}]
set_property IOSTANDARD LVCMOS33 [get_ports {DIP_SW[1]}]
set_property IOSTANDARD LVCMOS33 [get_ports {DIP_SW[0]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ETH_RXD[7]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ETH_RXD[6]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ETH_RXD[5]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ETH_RXD[4]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ETH_RXD[3]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ETH_RXD[2]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ETH_RXD[1]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ETH_RXD[0]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ETH_TXD[7]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ETH_TXD[6]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ETH_TXD[5]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ETH_TXD[4]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ETH_TXD[3]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ETH_TXD[2]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ETH_TXD[1]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ETH_TXD[0]}]
set_property IOSTANDARD LVCMOS33 [get_ports {NIM_INn[4]}]
set_property IOSTANDARD LVCMOS33 [get_ports {NIM_INn[3]}]
set_property IOSTANDARD LVCMOS33 [get_ports {NIM_INn[2]}]
set_property IOSTANDARD LVCMOS33 [get_ports {NIM_INn[1]}]
set_property IOSTANDARD LVCMOS33 [get_ports {X_LED[3]}]
set_property IOSTANDARD LVCMOS33 [get_ports {X_LED[2]}]
set_property IOSTANDARD LVCMOS33 [get_ports {X_LED[1]}]
set_property IOSTANDARD LVCMOS33 [get_ports {X_LED[0]}]

set_property PACKAGE_PIN R3 [get_ports {ADC_SDIO[2]}]
set_property PACKAGE_PIN W9 [get_ports {ADC_CLK_P[2]}]
#set_property IOSTANDARD LVCMOS25 [get_ports OSC50M]
set_property PACKAGE_PIN B18 [get_ports {ETH_TXD[6]}]
set_property PACKAGE_PIN D21 [get_ports ETH_TX_ER]
set_property PACKAGE_PIN C22 [get_ports ETH_TX_EN]
set_property PACKAGE_PIN B15 [get_ports {ETH_RXD[6]}]
set_property PACKAGE_PIN D14 [get_ports {ETH_RXD[3]}]
set_property PACKAGE_PIN A14 [get_ports {ETH_RXD[5]}]
set_property PACKAGE_PIN C13 [get_ports {ETH_RXD[0]}]
set_property PACKAGE_PIN G21 [get_ports ETH_RSTn]
set_property PACKAGE_PIN A13 [get_ports {ETH_RXD[2]}]
set_property PACKAGE_PIN C15 [get_ports ETH_RX_DV]
set_property IOSTANDARD LVCMOS33 [get_ports EEPROM_CS]
set_property IOSTANDARD LVCMOS33 [get_ports EEPROM_DI]
set_property IOSTANDARD LVCMOS33 [get_ports EEPROM_DO]
set_property IOSTANDARD LVCMOS33 [get_ports EEPROM_SK]
set_property IOSTANDARD LVCMOS33 [get_ports ETH_COL]
set_property IOSTANDARD LVCMOS33 [get_ports ETH_CRS]
set_property IOSTANDARD LVCMOS33 [get_ports ETH_MDC]
set_property IOSTANDARD LVCMOS33 [get_ports ETH_MDIO]
set_property IOSTANDARD LVCMOS33 [get_ports ETH_RSTn]
set_property IOSTANDARD LVCMOS33 [get_ports ETH_RX_CLK]
set_property IOSTANDARD LVCMOS33 [get_ports ETH_RX_DV]
set_property IOSTANDARD LVCMOS33 [get_ports ETH_RX_ER]
set_property IOSTANDARD LVCMOS33 [get_ports ETH_TX_EN]
set_property IOSTANDARD LVCMOS33 [get_ports ETH_TX_ER]
set_property IOSTANDARD LVCMOS33 [get_ports ETH_TX_CLK]

set_property PULLUP true [get_ports {DIP_SW[3]}]
set_property PULLUP true [get_ports {DIP_SW[2]}]
set_property PULLUP true [get_ports {DIP_SW[1]}]
set_property PULLUP true [get_ports {DIP_SW[0]}]

set_property PULLUP true [get_ports {ADC_SDIO[3]}]
set_property PULLUP true [get_ports {ADC_SDIO[2]}]
set_property PULLUP true [get_ports {ADC_SDIO[1]}]

set_property IOSTANDARD LVCMOS33 [get_ports GTX_CLK]
set_property PACKAGE_PIN D22 [get_ports GTX_CLK]


# User Generated miscellaneous constraints


# User Generated physical constraints

set_property PACKAGE_PIN W15 [get_ports {ADC_D_P[1]}]
set_property PACKAGE_PIN AA13 [get_ports {ADC_D_P[4]}]
set_property PACKAGE_PIN AA9 [get_ports {ADC_D_P[7]}]
set_property PACKAGE_PIN W10 [get_ports {ADC_CSB[1]}]
set_property PACKAGE_PIN Y11 [get_ports {ADC_SDIO[1]}]
set_property PACKAGE_PIN V13 [get_ports {ADC_DCO_P[1]}]
set_property PACKAGE_PIN J21 [get_ports EEPROM_SK]
set_property PACKAGE_PIN J19 [get_ports {NIM_INn[2]}]
set_property PACKAGE_PIN K18 [get_ports {NIM_INn[1]}]
set_property PACKAGE_PIN L19 [get_ports {NIM_INn[4]}]
set_property PACKAGE_PIN L20 [get_ports {NIM_INn[3]}]
set_property PACKAGE_PIN N22 [get_ports {X_LED[3]}]
set_property PACKAGE_PIN M22 [get_ports {DIP_SW[3]}]
set_property PACKAGE_PIN M18 [get_ports {DIP_SW[0]}]
set_property PACKAGE_PIN N18 [get_ports {X_LED[0]}]
set_property PACKAGE_PIN N19 [get_ports {X_LED[1]}]
set_property PACKAGE_PIN M21 [get_ports {DIP_SW[2]}]
set_property PACKAGE_PIN B13 [get_ports {ETH_RXD[1]}]
set_property PACKAGE_PIN A15 [get_ports {ETH_RXD[7]}]
set_property PACKAGE_PIN C14 [get_ports {ETH_RXD[4]}]
set_property PACKAGE_PIN B22 [get_ports {ETH_TXD[0]}]
set_property PACKAGE_PIN B21 [get_ports {ETH_TXD[1]}]
set_property PACKAGE_PIN A21 [get_ports {ETH_TXD[2]}]
set_property PACKAGE_PIN A20 [get_ports {ETH_TXD[4]}]
set_property PACKAGE_PIN A19 [get_ports {ETH_TXD[5]}]
set_property PACKAGE_PIN A18 [get_ports {ETH_TXD[7]}]
set_property PACKAGE_PIN B17 [get_ports ETH_CRS]
set_property PACKAGE_PIN C17 [get_ports ETH_COL]
set_property PACKAGE_PIN B16 [get_ports ETH_RX_ER]
set_property PACKAGE_PIN C18 [get_ports ETH_TX_CLK]
set_property PACKAGE_PIN E19 [get_ports ETH_RX_CLK]
set_property PACKAGE_PIN F21 [get_ports ETH_MDIO]
set_property PACKAGE_PIN E22 [get_ports ETH_MDC]
set_property PACKAGE_PIN U2 [get_ports {ADC_D_P[14]}]
set_property PACKAGE_PIN R2 [get_ports {ADC_CSB[2]}]
set_property PACKAGE_PIN Y6 [get_ports {ADC_D_P[10]}]
set_property PACKAGE_PIN V4 [get_ports {ADC_DCO_P[2]}]
set_property PACKAGE_PIN R4 [get_ports {ADC_FCO_P[2]}]
set_property PACKAGE_PIN Y2 [get_ports {ADC_SCLK[2]}]
set_property PACKAGE_PIN Y1 [get_ports {ADC_D_N[13]}]
set_property PACKAGE_PIN AA8 [get_ports {ADC_D_P[8]}]
set_property PACKAGE_PIN F3 [get_ports {ADC_SDIO[3]}]
set_property PACKAGE_PIN E3 [get_ports {ADC_CSB[3]}]
set_property PACKAGE_PIN H5 [get_ports {ADC_SCLK[3]}]
set_property PACKAGE_PIN H3 [get_ports {ADC_FCO_P[3]}]
set_property PACKAGE_PIN H4 [get_ports {ADC_DCO_P[3]}]
set_property PACKAGE_PIN P5 [get_ports {ADC_CLK_P[3]}]
set_property PACKAGE_PIN B20 [get_ports {ETH_TXD[3]}]
set_property PACKAGE_PIN K21 [get_ports EEPROM_DI]
set_property PACKAGE_PIN K22 [get_ports EEPROM_DO]
set_property PACKAGE_PIN J22 [get_ports EEPROM_CS]
set_property PACKAGE_PIN T1 [get_ports {ADC_D_P[15]}]
set_property PACKAGE_PIN AA1 [get_ports {ADC_D_P[12]}]
set_property PACKAGE_PIN T16 [get_ports {ADC_CLK_P[1]}]
#set_property PACKAGE_PIN K4 [get_ports OSC50M]
set_property PACKAGE_PIN M20 [get_ports {DIP_SW[1]}]
#set_property IOSTANDARD LVDS_25 [get_ports NIM_OUT_N]
#set_property PACKAGE_PIN AB16 [get_ports NIM_OUT_N]
#set_property OFFCHIP_TERM NONE [get_ports NIM_OUT_N]
set_property PACKAGE_PIN B1 [get_ports {ADC_D_N[23]}]
set_property PACKAGE_PIN A1 [get_ports {ADC_D_P[23]}]
set_property PACKAGE_PIN C2 [get_ports {ADC_D_N[22]}]
set_property PACKAGE_PIN B2 [get_ports {ADC_D_P[22]}]
set_property PACKAGE_PIN E1 [get_ports {ADC_D_N[21]}]
set_property PACKAGE_PIN D1 [get_ports {ADC_D_P[21]}]
set_property PACKAGE_PIN E2 [get_ports {ADC_D_N[20]}]
set_property PACKAGE_PIN D2 [get_ports {ADC_D_P[20]}]
set_property PACKAGE_PIN K1 [get_ports {ADC_D_N[19]}]
set_property PACKAGE_PIN J1 [get_ports {ADC_D_P[19]}]
set_property PACKAGE_PIN M1 [get_ports {ADC_D_N[18]}]
set_property PACKAGE_PIN L1 [get_ports {ADC_D_P[18]}]
set_property PACKAGE_PIN M3 [get_ports {ADC_D_N[17]}]
set_property PACKAGE_PIN M2 [get_ports {ADC_D_P[17]}]
set_property PACKAGE_PIN P2 [get_ports {ADC_D_N[16]}]
set_property PACKAGE_PIN N2 [get_ports {ADC_D_P[16]}]
set_property PACKAGE_PIN Y4 [get_ports {ADC_D_N[11]}]
set_property PACKAGE_PIN AA4 [get_ports {ADC_D_P[11]}]
set_property PACKAGE_PIN AB7 [get_ports {ADC_D_N[9]}]
set_property PACKAGE_PIN AB6 [get_ports {ADC_D_P[9]}]
set_property PACKAGE_PIN AA15 [get_ports {ADC_D_P[2]}]
set_property PACKAGE_PIN AB15 [get_ports {ADC_D_N[2]}]
set_property PACKAGE_PIN Y16 [get_ports {ADC_D_P[0]}]
set_property PACKAGE_PIN N20 [get_ports {X_LED[2]}]

# The conversion of 'PULL' constraint on 'net' object 'ETH_COL' has been applied to the port object 'ETH_COL'.
set_property PULLUP true [get_ports ETH_COL]
# D:/Work/FPGA/LAr_TPC_RO/V2/ADC_SiTCP_V20.ucf:275
# The conversion of 'PULL' constraint on 'net' object 'ETH_RXD[0]' has been applied to the port object 'ETH_RXD[0]'.
set_property PULLUP true [get_ports {ETH_RXD[0]}]
# D:/Work/FPGA/LAr_TPC_RO/V2/ADC_SiTCP_V20.ucf:276
# The conversion of 'PULL' constraint on 'net' object 'ETH_RXD[1]' has been applied to the port object 'ETH_RXD[1]'.
set_property PULLUP true [get_ports {ETH_RXD[1]}]
# D:/Work/FPGA/LAr_TPC_RO/V2/ADC_SiTCP_V20.ucf:277
# The conversion of 'PULL' constraint on 'net' object 'ETH_RXD[2]' has been applied to the port object 'ETH_RXD[2]'.
set_property PULLDOWN true [get_ports {ETH_RXD[2]}]
# D:/Work/FPGA/LAr_TPC_RO/V2/ADC_SiTCP_V20.ucf:278
# The conversion of 'PULL' constraint on 'net' object 'ETH_RXD[3]' has been applied to the port object 'ETH_RXD[3]'.
set_property PULLDOWN true [get_ports {ETH_RXD[3]}]
# D:/Work/FPGA/LAr_TPC_RO/V2/ADC_SiTCP_V20.ucf:279
# The conversion of 'PULL' constraint on 'net' object 'ETH_RX_CLK' has been applied to the port object 'ETH_RX_CLK'.
set_property PULLDOWN true [get_ports ETH_RX_CLK]
# D:/Work/FPGA/LAr_TPC_RO/V2/ADC_SiTCP_V20.ucf:280
# The conversion of 'PULL' constraint on 'net' object 'ETH_RX_ER' has been applied to the port object 'ETH_RX_ER'.
set_property PULLDOWN true [get_ports ETH_RX_ER]


set_property PACKAGE_PIN K4 [get_ports CLK75mp]
set_property IOSTANDARD LVDS_25 [get_ports CLK75mp]
set_property DIFF_TERM TRUE [get_ports CLK75mp]
set_property DIFF_TERM TRUE [get_ports CLK75mn]
#create_clock -period 12.500 -name CLK75mp [get_ports CLK75mp]

# D:/Work/FPGA/LAr_TPC_RO/V2/ADC_SiTCP_V20.ucf:306
#create_clock -period 40.000 -name ETH_TX_CLK [get_ports ETH_TX_CLK]
# D:/Work/FPGA/LAr_TPC_RO/V2/ADC_SiTCP_V20.ucf:308
#create_clock -period 40.000 -name ETH_RX_CLK [get_ports ETH_RX_CLK]
# D:/Work/FPGA/LAr_TPC_RO/V2/ADC_SiTCP_V20.ucf:310
#create_clock -period 6.700 -name {ADC_DCO_P[1]} [get_ports {ADC_DCO_P[1]}]
# D:/Work/FPGA/LAr_TPC_RO/V2/ADC_SiTCP_V20.ucf:312
#create_clock -period 6.700 -name {ADC_DCO_P[2]} [get_ports {ADC_DCO_P[2]}]
# D:/Work/FPGA/LAr_TPC_RO/V2/ADC_SiTCP_V20.ucf:314
#create_clock -period 6.700 -name {ADC_DCO_P[3]} [get_ports {ADC_DCO_P[3]}]
# D:/Work/FPGA/LAr_TPC_RO/V2/ADC_SiTCP_V20.ucf:318
#create_clock -period 6.700 -name {ADC_DCO_N[1]} [get_ports {ADC_DCO_N[1]}]
# D:/Work/FPGA/LAr_TPC_RO/V2/ADC_SiTCP_V20.ucf:320
#create_clock -period 6.700 -name {ADC_DCO_N[2]} [get_ports {ADC_DCO_N[2]}]
# D:/Work/FPGA/LAr_TPC_RO/V2/ADC_SiTCP_V20.ucf:322
#create_clock -period 6.700 -name {ADC_DCO_N[3]} [get_ports {ADC_DCO_N[3]}]

# The following cross clock domain false path constraints can be uncommented in order to mimic ucf constraints behavior (see message at the beginning of this file)
# set_false_path -from [get_clocks OSC50M] -to [get_clocks [list ETH_TX_CLK ETH_RX_CLK {ADC_DCO_P[1]} {ADC_DCO_P[2]} {ADC_DCO_P[3]} {ADC_DCO_P[4]} {ADC_DCO_N[1]} {ADC_DCO_N[2]} {ADC_DCO_N[3]} {ADC_DCO_N[4]}]]
# set_false_path -from [get_clocks ETH_TX_CLK] -to [get_clocks [list OSC50M ETH_RX_CLK {ADC_DCO_P[1]} {ADC_DCO_P[2]} {ADC_DCO_P[3]} {ADC_DCO_P[4]} {ADC_DCO_N[1]} {ADC_DCO_N[2]} {ADC_DCO_N[3]} {ADC_DCO_N[4]}]]
# set_false_path -from [get_clocks ETH_RX_CLK] -to [get_clocks [list OSC50M ETH_TX_CLK {ADC_DCO_P[1]} {ADC_DCO_P[2]} {ADC_DCO_P[3]} {ADC_DCO_P[4]} {ADC_DCO_N[1]} {ADC_DCO_N[2]} {ADC_DCO_N[3]} {ADC_DCO_N[4]}]]
# set_false_path -from [get_clocks {ADC_DCO_P[1]}] -to [get_clocks [list OSC50M ETH_TX_CLK ETH_RX_CLK {ADC_DCO_P[2]} {ADC_DCO_P[3]} {ADC_DCO_P[4]} {ADC_DCO_N[1]} {ADC_DCO_N[2]} {ADC_DCO_N[3]} {ADC_DCO_N[4]}]]
# set_false_path -from [get_clocks {ADC_DCO_P[2]}] -to [get_clocks [list OSC50M ETH_TX_CLK ETH_RX_CLK {ADC_DCO_P[1]} {ADC_DCO_P[3]} {ADC_DCO_P[4]} {ADC_DCO_N[1]} {ADC_DCO_N[2]} {ADC_DCO_N[3]} {ADC_DCO_N[4]}]]
# set_false_path -from [get_clocks {ADC_DCO_P[3]}] -to [get_clocks [list OSC50M ETH_TX_CLK ETH_RX_CLK {ADC_DCO_P[1]} {ADC_DCO_P[2]} {ADC_DCO_P[4]} {ADC_DCO_N[1]} {ADC_DCO_N[2]} {ADC_DCO_N[3]} {ADC_DCO_N[4]}]]
# set_false_path -from [get_clocks {ADC_DCO_P[4]}] -to [get_clocks [list OSC50M ETH_TX_CLK ETH_RX_CLK {ADC_DCO_P[1]} {ADC_DCO_P[2]} {ADC_DCO_P[3]} {ADC_DCO_N[1]} {ADC_DCO_N[2]} {ADC_DCO_N[3]} {ADC_DCO_N[4]}]]
# set_false_path -from [get_clocks {ADC_DCO_N[1]}] -to [get_clocks [list OSC50M ETH_TX_CLK ETH_RX_CLK {ADC_DCO_P[1]} {ADC_DCO_P[2]} {ADC_DCO_P[3]} {ADC_DCO_P[4]} {ADC_DCO_N[2]} {ADC_DCO_N[3]} {ADC_DCO_N[4]}]]
# set_false_path -from [get_clocks {ADC_DCO_N[2]}] -to [get_clocks [list OSC50M ETH_TX_CLK ETH_RX_CLK {ADC_DCO_P[1]} {ADC_DCO_P[2]} {ADC_DCO_P[3]} {ADC_DCO_P[4]} {ADC_DCO_N[1]} {ADC_DCO_N[3]} {ADC_DCO_N[4]}]]
# set_false_path -from [get_clocks {ADC_DCO_N[3]}] -to [get_clocks [list OSC50M ETH_TX_CLK ETH_RX_CLK {ADC_DCO_P[1]} {ADC_DCO_P[2]} {ADC_DCO_P[3]} {ADC_DCO_P[4]} {ADC_DCO_N[1]} {ADC_DCO_N[2]} {ADC_DCO_N[4]}]]
# set_false_path -from [get_clocks {ADC_DCO_N[4]}] -to [get_clocks [list OSC50M ETH_TX_CLK ETH_RX_CLK {ADC_DCO_P[1]} {ADC_DCO_P[2]} {ADC_DCO_P[3]} {ADC_DCO_P[4]} {ADC_DCO_N[1]} {ADC_DCO_N[2]} {ADC_DCO_N[3]}]]

create_clock -period 2.083 -name {ADC_DCO_P[1]} -waveform {0.000 1.042} [get_ports {ADC_DCO_P[1]}]
create_clock -period 2.083 -name {ADC_DCO_P[2]} -waveform {0.000 1.042} [get_ports {ADC_DCO_P[2]}]
create_clock -period 2.083 -name {ADC_DCO_P[3]} -waveform {0.000 1.042} [get_ports {ADC_DCO_P[3]}]

#////////2014.04.08///////////////////////////////////
#//NET "ADC_DCO_P<2>" CLOCK_DEDICATED_ROUTE = FALSE;//
#//NET "ADC_DCO_P<3>" CLOCK_DEDICATED_ROUTE = FALSE;//
#//NET "ADC_DCO_P<4>" CLOCK_DEDICATED_ROUTE = FALSE;//
#/////////////////////////////////////////////////////?




#set_false_path -from RST_FD2/C

#set_false_path -from AD_ADC_SIF_?/RST_FD/C


#set_false_path -from [get_clocks clk_out1_sys_mmcm] -to [get_clocks ETH_TX_CLK]
#set_false_path -from [get_clocks ETH_RX_CLK] -to [get_clocks clk_out1_sys_mmcm]


#set_false_path -from [get_clocks clk_out1_sys_mmcm] -to [get_clocks ETH_RX_CLK]


#set_false_path -from [get_clocks {ADC_DCO_P[?]}] -to [get_clocks clk_out1_sys_mmcm]


#set_false_path -from [get_pins {adcData_reg[*]/C}]

set_property IOSTANDARD LVCMOS33 [get_ports LED_1000]
set_property PACKAGE_PIN E21 [get_ports LED_1000]

set_property PACKAGE_PIN T21 [get_ports {ATT_MUX[0]}]
set_property PACKAGE_PIN T20 [get_ports {ATT_MUX[1]}]
set_property PACKAGE_PIN U21 [get_ports {ATT_MUX[2]}]
set_property PACKAGE_PIN U20 [get_ports {ATT_MUX[3]}]
set_property PACKAGE_PIN V22 [get_ports {ATT_MUX[4]}]
set_property PACKAGE_PIN W21 [get_ports {ATT_MUX[5]}]
set_property PACKAGE_PIN W22 [get_ports {ATT_MUX[6]}]
set_property PACKAGE_PIN W20 [get_ports {ATT_MUX[7]}]
set_property PACKAGE_PIN W19 [get_ports {ATT_MUX[8]}]
set_property PACKAGE_PIN Y22 [get_ports {ATT_MUX[9]}]
set_property PACKAGE_PIN Y21 [get_ports {ATT_MUX[10]}]
set_property PACKAGE_PIN AA21 [get_ports {ATT_MUX[11]}]
set_property PACKAGE_PIN AA20 [get_ports {ATT_MUX[12]}]
set_property PACKAGE_PIN AB20 [get_ports {ATT_MUX[13]}]
set_property PACKAGE_PIN AB22 [get_ports {ATT_MUX[14]}]
set_property PACKAGE_PIN AB21 [get_ports {ATT_MUX[15]}]
set_property PACKAGE_PIN P20 [get_ports {ATT_MUX[16]}]
set_property PACKAGE_PIN P19 [get_ports {ATT_MUX[17]}]
set_property PACKAGE_PIN R19 [get_ports {ATT_MUX[18]}]
set_property PACKAGE_PIN V19 [get_ports {ATT_MUX[19]}]
set_property PACKAGE_PIN Y19 [get_ports {ATT_MUX[20]}]
set_property PACKAGE_PIN AA19 [get_ports {ATT_MUX[21]}]
set_property PACKAGE_PIN R17 [get_ports {ATT_MUX[22]}]
set_property PACKAGE_PIN R18 [get_ports {ATT_MUX[23]}]
set_property PACKAGE_PIN T18 [get_ports {ATT_MUX[24]}]
set_property PACKAGE_PIN Y18 [get_ports {ATT_MUX[25]}]
set_property PACKAGE_PIN AA18 [get_ports {ATT_MUX[26]}]
set_property PACKAGE_PIN AB18 [get_ports {ATT_MUX[27]}]
set_property PACKAGE_PIN V18 [get_ports {ATT_MUX[28]}]
set_property PACKAGE_PIN U18 [get_ports {ATT_MUX[29]}]
set_property PACKAGE_PIN U17 [get_ports {ATT_MUX[30]}]
set_property PACKAGE_PIN V17 [get_ports {ATT_MUX[31]}]
set_property PACKAGE_PIN G13 [get_ports {ATT_MUX[32]}]
set_property PACKAGE_PIN G15 [get_ports {ATT_MUX[33]}]
set_property PACKAGE_PIN G16 [get_ports {ATT_MUX[34]}]
set_property PACKAGE_PIN G17 [get_ports {ATT_MUX[35]}]
set_property PACKAGE_PIN G18 [get_ports {ATT_MUX[36]}]
set_property PACKAGE_PIN G20 [get_ports {ATT_MUX[37]}]
set_property PACKAGE_PIN H18 [get_ports {ATT_MUX[38]}]
set_property PACKAGE_PIN H20 [get_ports {ATT_MUX[39]}]
set_property PACKAGE_PIN J17 [get_ports {ATT_MUX[40]}]
set_property PACKAGE_PIN K16 [get_ports {ATT_MUX[41]}]
set_property PACKAGE_PIN L15 [get_ports {ATT_MUX[42]}]
set_property PACKAGE_PIN L16 [get_ports {ATT_MUX[43]}]
set_property PACKAGE_PIN M13 [get_ports {ATT_MUX[44]}]
set_property PACKAGE_PIN M15 [get_ports {ATT_MUX[45]}]
set_property PACKAGE_PIN M16 [get_ports {ATT_MUX[46]}]
set_property PACKAGE_PIN M17 [get_ports {ATT_MUX[47]}]
set_property PACKAGE_PIN H19 [get_ports INTERLOCK]
#set_property PACKAGE_PIN AB16 [get_ports NIM_OUT_P]

set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[0]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[1]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[2]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[3]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[4]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[5]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[6]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[7]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[8]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[9]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[10]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[11]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[12]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[13]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[14]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[15]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[16]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[17]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[18]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[19]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[20]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[21]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[22]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[23]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[24]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[25]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[26]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[27]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[28]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[29]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[30]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[31]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[32]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[33]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[34]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[35]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[36]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[37]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[38]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[39]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[40]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[41]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[42]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[43]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[44]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[45]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[46]}]
set_property IOSTANDARD LVCMOS33 [get_ports {ATT_MUX[47]}]
set_property IOSTANDARD LVCMOS33 [get_ports INTERLOCK]


#set_property PACKAGE_PIN H19 [get_ports INTERLOCK]
#set_property IOSTANDARD LVCMOS33 [get_ports INTERLOCK]
#
#set_property PACKAGE_PIN AB16 [get_ports NIM_OUT_P]

set_property DIFF_TERM TRUE [get_ports {ADC_DCO_P[1]}]
set_property DIFF_TERM TRUE [get_ports {ADC_DCO_N[1]}]
set_property DIFF_TERM TRUE [get_ports {ADC_FCO_P[1]}]
set_property DIFF_TERM TRUE [get_ports {ADC_FCO_N[1]}]
set_property DIFF_TERM TRUE [get_ports {ADC_DCO_P[2]}]
set_property DIFF_TERM TRUE [get_ports {ADC_DCO_N[2]}]
set_property DIFF_TERM TRUE [get_ports {ADC_FCO_P[2]}]
set_property DIFF_TERM TRUE [get_ports {ADC_FCO_N[2]}]
set_property DIFF_TERM TRUE [get_ports {ADC_DCO_P[3]}]
set_property DIFF_TERM TRUE [get_ports {ADC_DCO_N[3]}]
set_property DIFF_TERM TRUE [get_ports {ADC_FCO_P[3]}]
set_property DIFF_TERM TRUE [get_ports {ADC_FCO_N[3]}]

set_property DIFF_TERM TRUE [get_ports {ADC_D_P[23]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_N[23]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_P[22]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_N[22]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_P[21]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_N[21]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_P[20]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_N[20]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_P[19]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_N[19]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_P[18]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_N[18]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_P[17]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_N[17]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_P[16]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_N[16]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_P[15]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_N[15]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_P[14]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_N[14]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_P[13]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_N[13]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_P[12]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_N[12]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_P[11]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_N[11]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_P[10]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_N[10]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_P[9]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_N[9]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_P[8]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_N[8]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_P[7]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_N[7]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_P[6]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_N[6]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_P[5]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_N[5]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_P[4]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_N[4]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_P[3]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_N[3]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_P[2]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_N[2]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_P[1]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_N[1]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_P[0]}]
set_property DIFF_TERM TRUE [get_ports {ADC_D_N[0]}]



set_property PACKAGE_PIN E14 [get_ports {J0S[2]}]
set_property IOSTANDARD LVCMOS33 [get_ports {J0S[2]}]
set_property IOSTANDARD LVCMOS33 [get_ports {J0S[6]}]
set_property PACKAGE_PIN E13 [get_ports {C[1]}]
set_property IOSTANDARD LVCMOS33 [get_ports {C[1]}]
set_property PACKAGE_PIN F14 [get_ports {C[0]}]
set_property IOSTANDARD LVCMOS33 [get_ports {C[0]}]
set_property PACKAGE_PIN D17 [get_ports {J0S[3]}]
set_property IOSTANDARD LVCMOS33 [get_ports {J0S[3]}]
set_property PACKAGE_PIN C20 [get_ports {J0S[5]}]
set_property IOSTANDARD LVCMOS33 [get_ports {J0S[5]}]
set_property PACKAGE_PIN D20 [get_ports {J0S[7]}]
set_property IOSTANDARD LVCMOS33 [get_ports {J0S[7]}]
set_property PACKAGE_PIN F15 [get_ports {J0S[4]}]
set_property IOSTANDARD LVCMOS33 [get_ports {J0S[4]}]
set_property PACKAGE_PIN E16 [get_ports {J0S[6]}]

set_property PACKAGE_PIN AB16 [get_ports NIM_OUT_P]
set_property PACKAGE_PIN AB17 [get_ports NIM_OUT_N]

#create_clock -period 6.250 -name CLK160M -waveform {0.000 3.125} [get_nets -hierarchical *CLK160*]
#create_clock -period 8.000 -name CLK125M -waveform {0.000 4.000} [get_nets -hierarchical *CLK125M*]




#need?
set_false_path -through [get_nets SiTCP/SiTCP/SiTCP_INT/SiTCP_INT_REG/reg*]
set_false_path -through [get_nets SiTCP/SiTCP/BBT_SiTCP_RST/resetReq*]
set_false_path -through [get_nets SiTCP/SiTCP/GMII/GMII_TXBUF/memRdReq*]
set_false_path -through [get_nets SiTCP/SiTCP/GMII/GMII_TXBUF/orRdAct*]
set_false_path -through [get_nets SiTCP/SiTCP/GMII/GMII_TXBUF/dlyBank0LastWrAddr*]
set_false_path -through [get_nets SiTCP/SiTCP/GMII/GMII_TXBUF/dlyBank1LastWrAddr*]
set_false_path -through [get_nets SiTCP/SiTCP/GMII/GMII_TXBUF/muxEndTgl]
set_false_path -through [get_nets SiTCP/SiTCP/GMII/GMII_RXBUF/cmpWrAddr*]




#
#set_false_path -from [get_pins {ADC_SiTCP_RAW/ADC_INT/multiplier_0/U0/i_mult/gLUT.gLUT_speed.iLUT/NxM_mult.stage_3_add.stage_3_pipeline.s3_add_out_reg[0][1]/C}] -to [get_pins {ADC_SiTCP_RAW/ADC_INT/multiplier_1/U0/i_mult/gLUT.gLUT_speed.iLUT/NxM_mult.stage_3_add.stage_3_pipeline.s3_add_out_reg[0][77]/D}]
#set_false_path -from [get_pins {ADC_SiTCP_RAW/ADC_INT/multiplier_0/U0/i_mult/gLUT.gLUT_speed.iLUT/NxM_mult.stage_3_add.stage_3_pipeline.s3_add_out_reg[0][1]/C}] -to [get_pins {ADC_SiTCP_RAW/ADC_INT/multiplier_1/U0/i_mult/gLUT.gLUT_speed.iLUT/NxM_mult.stage_3_add.stage_3_pipeline.s3_add_out_reg[0][79]/D}]
#set_false_path -from [get_pins {ADC_SiTCP_RAW/ADC_INT/spos2_reg[12]/C}] -to [get_pins {ADC_SiTCP_RAW/ADC_INT/multiplier_1/U0/i_mult/gLUT.gLUT_speed.iLUT/NxM_mult.stage_3_add.stage_3_pipeline.s3_add_out_reg[0][77]/D}]
#set_false_path -from [get_pins {ADC_SiTCP_RAW/ADC_INT/multiplier_0/U0/i_mult/gLUT.gLUT_speed.iLUT/NxM_mult.stage_3_add.stage_3_pipeline.s3_add_out_reg[0][1]/C}] -to [get_pins {ADC_SiTCP_RAW/ADC_INT/multiplier_1/U0/i_mult/gLUT.gLUT_speed.iLUT/NxM_mult.stage_3_add.stage_3_pipeline.s3_add_out_reg[0][78]/D}]
#set_false_path -from [get_pins {ADC_SiTCP_RAW/ADC_INT/multiplier_0/U0/i_mult/gLUT.gLUT_speed.iLUT/NxM_mult.stage_3_add.stage_3_pipeline.s3_add_out_reg[0][1]/C}] -to [get_pins {ADC_SiTCP_RAW/ADC_INT/multiplier_1/U0/i_mult/gLUT.gLUT_speed.iLUT/NxM_mult.stage_3_add.stage_3_pipeline.s3_add_out_reg[0][76]/D}]
#set_false_path -from [get_pins {ADC_SiTCP_RAW/ADC_INT/multiplier_0/U0/i_mult/gLUT.gLUT_speed.iLUT/NxM_mult.stage_3_add.stage_3_pipeline.s3_add_out_reg[0][1]/C}] -to [get_pins {ADC_SiTCP_RAW/ADC_INT/multiplier_1/U0/i_mult/gLUT.gLUT_speed.iLUT/NxM_mult.stage_3_add.stage_3_pipeline.s3_add_out_reg[0][73]/D}]
#set_false_path -from [get_pins {ADC_SiTCP_RAW/ADC_INT/multiplier_0/U0/i_mult/gLUT.gLUT_speed.iLUT/NxM_mult.stage_3_add.stage_3_pipeline.s3_add_out_reg[0][1]/C}] -to [get_pins {ADC_SiTCP_RAW/ADC_INT/multiplier_1/U0/i_mult/gLUT.gLUT_speed.iLUT/NxM_mult.stage_3_add.stage_3_pipeline.s3_add_out_reg[0][75]/D}]
#set_false_path -from [get_pins {ADC_SiTCP_RAW/ADC_INT/multiplier_0/U0/i_mult/gLUT.gLUT_speed.iLUT/NxM_mult.stage_3_add.stage_3_pipeline.s3_add_out_reg[0][1]/C}] -to [get_pins {ADC_SiTCP_RAW/ADC_INT/multiplier_1/U0/i_mult/gLUT.gLUT_speed.iLUT/NxM_mult.stage_3_add.stage_3_pipeline.s3_add_out_reg[0][74]/D}]
#set_false_path -from [get_pins {ADC_SiTCP_RAW/ADC_INT/multiplier_0/U0/i_mult/gLUT.gLUT_speed.iLUT/NxM_mult.stage_3_add.stage_3_pipeline.s3_add_out_reg[0][1]/C}] -to [get_pins {ADC_SiTCP_RAW/ADC_INT/multiplier_1/U0/i_mult/gLUT.gLUT_speed.iLUT/NxM_mult.stage_3_add.stage_3_pipeline.s3_add_out_reg[0][72]/D}]
#set_false_path -from [get_pins {ADC_SiTCP_RAW/ADC_INT/multiplier_0/U0/i_mult/gLUT.gLUT_speed.iLUT/NxM_mult.stage_3_add.stage_3_pipeline.s3_add_out_reg[0][1]/C}] -to [get_pins {ADC_SiTCP_RAW/ADC_INT/multiplier_1/U0/i_mult/gLUT.gLUT_speed.iLUT/NxM_mult.stage_3_add.stage_3_pipeline.s3_add_out_reg[0][69]/D}]
#set_false_path -from [get_pins {ADC_SiTCP_RAW/ADC_INT/multiplier_0/U0/i_mult/gLUT.gLUT_speed.iLUT/NxM_mult.stage_3_add.stage_3_pipeline.s3_add_out_reg[0][1]/C}] -to [get_pins {ADC_SiTCP_RAW/ADC_INT/multiplier_1/U0/i_mult/gLUT.gLUT_speed.iLUT/NxM_mult.stage_3_add.stage_3_pipeline.s3_add_out_reg[0][71]/D}]
#set_false_path -from [get_pins {LOC_REG/x71_Reg_reg[1]/C}] -to [get_pins {ADC1_IF/DIV_RST_reg[0]/D}]
#set_false_path -from [get_pins {LOC_REG/x71_Reg_reg[0]/C}] -to [get_pins {ADC1_IF/en_rst_reg[0]/D}]
#set_false_path -from [get_pins {LOC_REG/x75_Reg_reg[0]/C}] -to [get_pins {ADC1_IF/adc/inst/pins[0].idelaye2_bus/CNTVALUEIN[0]}]
#set_false_path -from [get_pins {LOC_REG/x75_Reg_reg[1]/C}] -to [get_pins {ADC1_IF/adc/inst/pins[0].idelaye2_bus/CNTVALUEIN[1]}]
#set_false_path -from [get_pins {LOC_REG/x75_Reg_reg[2]/C}] -to [get_pins {ADC1_IF/adc/inst/pins[0].idelaye2_bus/CNTVALUEIN[2]}]
#set_false_path -from [get_pins {LOC_REG/x75_Reg_reg[3]/C}] -to [get_pins {ADC1_IF/adc/inst/pins[0].idelaye2_bus/CNTVALUEIN[3]}]
#set_false_path -from [get_pins {LOC_REG/x75_Reg_reg[4]/C}] -to [get_pins {ADC1_IF/adc/inst/pins[0].idelaye2_bus/CNTVALUEIN[4]}]
#set_false_path -from [get_pins {LOC_REG/x7D_Reg_reg[0]/C}] -to [get_pins {ADC1_IF/adc/inst/pins[1].idelaye2_bus/CNTVALUEIN[0]}]
#set_false_path -from [get_pins {LOC_REG/x7D_Reg_reg[1]/C}] -to [get_pins {ADC1_IF/adc/inst/pins[1].idelaye2_bus/CNTVALUEIN[1]}]
#set_false_path -from [get_pins {LOC_REG/x7D_Reg_reg[2]/C}] -to [get_pins {ADC1_IF/adc/inst/pins[1].idelaye2_bus/CNTVALUEIN[2]}]
#set_false_path -from [get_pins {LOC_REG/x71_Reg_reg[1]/C}] -to [get_pins {ADC2_IF/DIV_RST_reg[0]/D}]
#set_false_path -from [get_pins {LOC_REG/x71_Reg_reg[0]/C}] -to [get_pins {ADC2_IF/en_rst_reg[0]/D}]
#set_false_path -from [get_pins {LOC_REG/x75_Reg_reg[0]/C}] -to [get_pins {ADC2_IF/adc/inst/pins[0].idelaye2_bus/CNTVALUEIN[0]}]
#set_false_path -from [get_pins {LOC_REG/x75_Reg_reg[1]/C}] -to [get_pins {ADC2_IF/adc/inst/pins[0].idelaye2_bus/CNTVALUEIN[1]}]
#set_false_path -from [get_pins {LOC_REG/x75_Reg_reg[2]/C}] -to [get_pins {ADC2_IF/adc/inst/pins[0].idelaye2_bus/CNTVALUEIN[2]}]
#set_false_path -from [get_pins {LOC_REG/x75_Reg_reg[3]/C}] -to [get_pins {ADC2_IF/adc/inst/pins[0].idelaye2_bus/CNTVALUEIN[3]}]
#set_false_path -from [get_pins {LOC_REG/x75_Reg_reg[4]/C}] -to [get_pins {ADC2_IF/adc/inst/pins[0].idelaye2_bus/CNTVALUEIN[4]}]
#set_false_path -from [get_pins {LOC_REG/x7D_Reg_reg[0]/C}] -to [get_pins {ADC2_IF/adc/inst/pins[1].idelaye2_bus/CNTVALUEIN[0]}]
#set_false_path -from [get_pins {LOC_REG/x7D_Reg_reg[1]/C}] -to [get_pins {ADC2_IF/adc/inst/pins[1].idelaye2_bus/CNTVALUEIN[1]}]
#set_false_path -from [get_pins {LOC_REG/x7D_Reg_reg[2]/C}] -to [get_pins {ADC2_IF/adc/inst/pins[1].idelaye2_bus/CNTVALUEIN[2]}]
#set_false_path -from [get_pins {LOC_REG/x71_Reg_reg[1]/C}] -to [get_pins {ADC3_IF/DIV_RST_reg[0]/D}]
#set_false_path -from [get_pins {LOC_REG/x71_Reg_reg[0]/C}] -to [get_pins {ADC3_IF/en_rst_reg[0]/D}]
#set_false_path -from [get_pins {LOC_REG/x75_Reg_reg[0]/C}] -to [get_pins {ADC3_IF/adc/inst/pins[0].idelaye2_bus/CNTVALUEIN[0]}]
#set_false_path -from [get_pins {LOC_REG/x75_Reg_reg[1]/C}] -to [get_pins {ADC3_IF/adc/inst/pins[0].idelaye2_bus/CNTVALUEIN[1]}]
#set_false_path -from [get_pins {LOC_REG/x75_Reg_reg[2]/C}] -to [get_pins {ADC3_IF/adc/inst/pins[0].idelaye2_bus/CNTVALUEIN[2]}]
#set_false_path -from [get_pins {LOC_REG/x75_Reg_reg[3]/C}] -to [get_pins {ADC3_IF/adc/inst/pins[0].idelaye2_bus/CNTVALUEIN[3]}]
#set_false_path -from [get_pins {LOC_REG/x75_Reg_reg[4]/C}] -to [get_pins {ADC3_IF/adc/inst/pins[0].idelaye2_bus/CNTVALUEIN[4]}]
#set_false_path -from [get_pins {LOC_REG/x7D_Reg_reg[0]/C}] -to [get_pins {ADC3_IF/adc/inst/pins[1].idelaye2_bus/CNTVALUEIN[0]}]
#set_false_path -from [get_pins {LOC_REG/x7D_Reg_reg[1]/C}] -to [get_pins {ADC3_IF/adc/inst/pins[1].idelaye2_bus/CNTVALUEIN[1]}]
#set_false_path -from [get_pins {LOC_REG/x7D_Reg_reg[2]/C}] -to [get_pins {ADC3_IF/adc/inst/pins[1].idelaye2_bus/CNTVALUEIN[2]}]

create_generated_clock -name {ADC_CLK_P[1]} -source [get_pins ADC_CLK_ODDR_1/C] -divide_by 1 [get_ports {ADC_CLK_P[1]}]
create_generated_clock -name {ADC_CLK_P[2]} -source [get_pins ADC_CLK_ODDR_2/C] -divide_by 1 [get_ports {ADC_CLK_P[2]}]
create_generated_clock -name {ADC_CLK_P[3]} -source [get_pins ADC_CLK_ODDR_3/C] -divide_by 1 [get_ports {ADC_CLK_P[3]}]

#create_generated_clock -name CLK_DIV_OUT_1 -source [get_pins {ADC1_IF/adc/ADC_DCO_P[1]}] -divide_by 3 [get_nets ADC1_IF/CLK_DIV_OUT]
#create_generated_clock -name CLK_DIV_OUT_2 -source [get_pins {ADC2_IF/adc/ADC_DCO_P[2]}] -divide_by 3 [get_nets ADC2_IF/CLK_DIV_OUT]
#create_generated_clock -name CLK_DIV_OUT_3 -source [get_pins {ADC3_IF/adc/ADC_DCO_P[3]}] -divide_by 3 [get_nets ADC3_IF/CLK_DIV_OUT]




#create_clock -period 3.750 -name CLK_DIV_OUT_1 -waveform {0.000 1.875} [get_nets ADC1_IF/CLK_DIV_OUT]

#need?
#set_false_path -from [get_clocks -of_objects [get_pins SYSCLK0/inst/mmcm_adv_inst/CLKOUT0]] -to [get_clocks -of_objects [get_pins SYSCLK0/inst/mmcm_adv_inst/CLKOUT0]]


#create_debug_core u_ila_0 ila
#set_property ALL_PROBE_SAME_MU true [get_debug_cores u_ila_0]
#set_property ALL_PROBE_SAME_MU_CNT 1 [get_debug_cores u_ila_0]
#set_property C_ADV_TRIGGER false [get_debug_cores u_ila_0]
#set_property C_DATA_DEPTH 1024 [get_debug_cores u_ila_0]
#set_property C_EN_STRG_QUAL false [get_debug_cores u_ila_0]
#set_property C_INPUT_PIPE_STAGES 0 [get_debug_cores u_ila_0]
#set_property C_TRIGIN_EN false [get_debug_cores u_ila_0]
#set_property C_TRIGOUT_EN false [get_debug_cores u_ila_0]
#set_property port_width 1 [get_debug_ports u_ila_0/clk]
#connect_debug_port u_ila_0/clk [get_nets [list SYSCLK0/inst/clk_out1]]
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe0]
#set_property port_width 8 [get_debug_ports u_ila_0/probe0]
#connect_debug_port u_ila_0/probe0 [get_nets [list {ADC_SiTCP_RAW/SiTCP_TX_WD[0]} {ADC_SiTCP_RAW/SiTCP_TX_WD[1]} {ADC_SiTCP_RAW/SiTCP_TX_WD[2]} {ADC_SiTCP_RAW/SiTCP_TX_WD[3]} {ADC_SiTCP_RAW/SiTCP_TX_WD[4]} {ADC_SiTCP_RAW/SiTCP_TX_WD[5]} {ADC_SiTCP_RAW/SiTCP_TX_WD[6]} {ADC_SiTCP_RAW/SiTCP_TX_WD[7]}]]
#set_property C_CLK_INPUT_FREQ_HZ 300000000 [get_debug_cores dbg_hub]
#set_property C_ENABLE_CLK_DIVIDER false [get_debug_cores dbg_hub]
#set_property C_USER_SCAN_CHAIN 1 [get_debug_cores dbg_hub]
#connect_debug_port dbg_hub/clk [get_nets CLK160M]






#set_property OFFCHIP_TERM NONE [get_ports NIM_OUT_P]

set_property OFFCHIP_TERM NONE [get_ports EEPROM_CS]
set_property OFFCHIP_TERM NONE [get_ports EEPROM_DI]
set_property OFFCHIP_TERM NONE [get_ports EEPROM_SK]
set_property OFFCHIP_TERM NONE [get_ports ETH_MDC]
set_property OFFCHIP_TERM NONE [get_ports ETH_MDIO]
set_property OFFCHIP_TERM NONE [get_ports ETH_RSTn]
set_property OFFCHIP_TERM NONE [get_ports ETH_TX_EN]
set_property OFFCHIP_TERM NONE [get_ports ETH_TX_ER]
set_property OFFCHIP_TERM NONE [get_ports GTX_CLK]
set_property OFFCHIP_TERM NONE [get_ports NIM_OUT_P]
set_property OFFCHIP_TERM NONE [get_ports ADC_CLK_P[3]]
set_property OFFCHIP_TERM NONE [get_ports ADC_CLK_P[2]]
set_property OFFCHIP_TERM NONE [get_ports ADC_CLK_P[1]]
set_property OFFCHIP_TERM NONE [get_ports ADC_CSB[3]]
set_property OFFCHIP_TERM NONE [get_ports ADC_CSB[2]]
set_property OFFCHIP_TERM NONE [get_ports ADC_CSB[1]]
set_property OFFCHIP_TERM NONE [get_ports ADC_SCLK[3]]
set_property OFFCHIP_TERM NONE [get_ports ADC_SCLK[2]]
set_property OFFCHIP_TERM NONE [get_ports ADC_SCLK[1]]
set_property OFFCHIP_TERM NONE [get_ports ADC_SDIO[3]]
set_property OFFCHIP_TERM NONE [get_ports ADC_SDIO[2]]
set_property OFFCHIP_TERM NONE [get_ports ADC_SDIO[1]]
set_property OFFCHIP_TERM NONE [get_ports ETH_TXD[7]]
set_property OFFCHIP_TERM NONE [get_ports ETH_TXD[6]]
set_property OFFCHIP_TERM NONE [get_ports ETH_TXD[5]]
set_property OFFCHIP_TERM NONE [get_ports ETH_TXD[4]]
set_property OFFCHIP_TERM NONE [get_ports ETH_TXD[3]]
set_property OFFCHIP_TERM NONE [get_ports ETH_TXD[2]]
set_property OFFCHIP_TERM NONE [get_ports ETH_TXD[1]]
set_property OFFCHIP_TERM NONE [get_ports ETH_TXD[0]]
set_property OFFCHIP_TERM NONE [get_ports X_LED[3]]
set_property OFFCHIP_TERM NONE [get_ports X_LED[2]]
set_property OFFCHIP_TERM NONE [get_ports X_LED[1]]
set_property OFFCHIP_TERM NONE [get_ports X_LED[0]]
create_debug_core u_ila_0 ila
set_property ALL_PROBE_SAME_MU true [get_debug_cores u_ila_0]
set_property ALL_PROBE_SAME_MU_CNT 1 [get_debug_cores u_ila_0]
set_property C_ADV_TRIGGER false [get_debug_cores u_ila_0]
set_property C_DATA_DEPTH 1024 [get_debug_cores u_ila_0]
set_property C_EN_STRG_QUAL false [get_debug_cores u_ila_0]
set_property C_INPUT_PIPE_STAGES 0 [get_debug_cores u_ila_0]
set_property C_TRIGIN_EN false [get_debug_cores u_ila_0]
set_property C_TRIGOUT_EN false [get_debug_cores u_ila_0]
set_property port_width 1 [get_debug_ports u_ila_0/clk]
connect_debug_port u_ila_0/clk [get_nets [list SYSCLK0/inst/clk_out1]]
set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe0]
set_property port_width 3 [get_debug_ports u_ila_0/probe0]
connect_debug_port u_ila_0/probe0 [get_nets [list {ADC_SiTCP_RAW/RAW_NUM_TAG[0]} {ADC_SiTCP_RAW/RAW_NUM_TAG[1]} {ADC_SiTCP_RAW/RAW_NUM_TAG[2]}]]
create_debug_port u_ila_0 probe
set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe1]
set_property port_width 2 [get_debug_ports u_ila_0/probe1]
connect_debug_port u_ila_0/probe1 [get_nets [list {ADC_SiTCP_RAW/srTagIn[0]} {ADC_SiTCP_RAW/srTagIn[1]}]]
create_debug_port u_ila_0 probe
set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe2]
set_property port_width 24 [get_debug_ports u_ila_0/probe2]
connect_debug_port u_ila_0/probe2 [get_nets [list {LOC_REG/REG_THRESHOLD_WIDTH[0]} {LOC_REG/REG_THRESHOLD_WIDTH[1]} {LOC_REG/REG_THRESHOLD_WIDTH[2]} {LOC_REG/REG_THRESHOLD_WIDTH[3]} {LOC_REG/REG_THRESHOLD_WIDTH[4]} {LOC_REG/REG_THRESHOLD_WIDTH[5]} {LOC_REG/REG_THRESHOLD_WIDTH[6]} {LOC_REG/REG_THRESHOLD_WIDTH[7]} {LOC_REG/REG_THRESHOLD_WIDTH[8]} {LOC_REG/REG_THRESHOLD_WIDTH[9]} {LOC_REG/REG_THRESHOLD_WIDTH[10]} {LOC_REG/REG_THRESHOLD_WIDTH[11]} {LOC_REG/REG_THRESHOLD_WIDTH[12]} {LOC_REG/REG_THRESHOLD_WIDTH[13]} {LOC_REG/REG_THRESHOLD_WIDTH[14]} {LOC_REG/REG_THRESHOLD_WIDTH[15]} {LOC_REG/REG_THRESHOLD_WIDTH[16]} {LOC_REG/REG_THRESHOLD_WIDTH[17]} {LOC_REG/REG_THRESHOLD_WIDTH[18]} {LOC_REG/REG_THRESHOLD_WIDTH[19]} {LOC_REG/REG_THRESHOLD_WIDTH[20]} {LOC_REG/REG_THRESHOLD_WIDTH[21]} {LOC_REG/REG_THRESHOLD_WIDTH[22]} {LOC_REG/REG_THRESHOLD_WIDTH[23]}]]
create_debug_port u_ila_0 probe
set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe3]
set_property port_width 16 [get_debug_ports u_ila_0/probe3]
connect_debug_port u_ila_0/probe3 [get_nets [list {LOC_REG/REG_THRESHOLD[0]} {LOC_REG/REG_THRESHOLD[1]} {LOC_REG/REG_THRESHOLD[2]} {LOC_REG/REG_THRESHOLD[3]} {LOC_REG/REG_THRESHOLD[4]} {LOC_REG/REG_THRESHOLD[5]} {LOC_REG/REG_THRESHOLD[6]} {LOC_REG/REG_THRESHOLD[7]} {LOC_REG/REG_THRESHOLD[8]} {LOC_REG/REG_THRESHOLD[9]} {LOC_REG/REG_THRESHOLD[10]} {LOC_REG/REG_THRESHOLD[11]} {LOC_REG/REG_THRESHOLD[12]} {LOC_REG/REG_THRESHOLD[13]} {LOC_REG/REG_THRESHOLD[14]} {LOC_REG/REG_THRESHOLD[15]}]]
create_debug_port u_ila_0 probe
set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe4]
set_property port_width 2 [get_debug_ports u_ila_0/probe4]
connect_debug_port u_ila_0/probe4 [get_nets [list {X_LED_OBUF[1]} {X_LED_OBUF[3]}]]
create_debug_port u_ila_0 probe
set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe5]
set_property port_width 1 [get_debug_ports u_ila_0/probe5]
connect_debug_port u_ila_0/probe5 [get_nets [list ADC_SiTCP_RAW/ADC_INT/INT_TAG]]
create_debug_port u_ila_0 probe
set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe6]
set_property port_width 1 [get_debug_ports u_ila_0/probe6]
connect_debug_port u_ila_0/probe6 [get_nets [list ADC_SiTCP_RAW/INT_TAG]]
create_debug_port u_ila_0 probe
set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe7]
set_property port_width 1 [get_debug_ports u_ila_0/probe7]
connect_debug_port u_ila_0/probe7 [get_nets [list INTERLOCK_OBUF]]
create_debug_port u_ila_0 probe
set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe8]
set_property port_width 1 [get_debug_ports u_ila_0/probe8]
connect_debug_port u_ila_0/probe8 [get_nets [list ADC_SiTCP_RAW/RAW_TRG_TAG]]
set_property C_CLK_INPUT_FREQ_HZ 300000000 [get_debug_cores dbg_hub]
set_property C_ENABLE_CLK_DIVIDER false [get_debug_cores dbg_hub]
set_property C_USER_SCAN_CHAIN 1 [get_debug_cores dbg_hub]
connect_debug_port dbg_hub/clk [get_nets CLK160M]
